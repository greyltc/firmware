name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Trigger for parent image update
  repository_dispatch:
    types: [parent-change]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "TODAY_IS=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Generate version string
        id: versionstring
        run: echo "THIS_VERSTRING=${{ env.TODAY_IS }}.0.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Get Actions Bot ID
        id: gbid
        if: github.event_name != 'pull_request'
        run: |
          curl --silent \
          --url https://api.github.com/users/$(printf %s "${ACTIONS_BOT_NAME}"|jq -sRr @uri) \
          --output bot_info.json
          echo "::set-output name=bot-id::$(cat bot_info.json | jq --raw-output '.id')"

      - name: Set version
        run: |
          echo "Setting version ${THIS_VERSTRING}"
          sed --in-place 's,^#define FIRMWARE_VER.*,#define FIRMWARE_VER "'${THIS_VERSTRING}'",g' main-uC/firmware.cpp
          sed --in-place 's,^#define FIRMWARE_VER.*,#define FIRMWARE_VER "'${THIS_VERSTRING}'",g' stepper-uC/firmware.cpp

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Compile firmware
        id: build-fw
        uses: docker/build-push-action@v2
        with:
          target: export
          outputs: type=local,dest=out
